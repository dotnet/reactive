<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net472;uap10.0.18362;net8.0;net8.0-windows10.0.19041</TargetFrameworks>
    <Nullable>enable</Nullable>

    <DefineConstants>$(DefineConstants);LEGACY_SYSTEM_REACTIVE_FACADE</DefineConstants>
  </PropertyGroup>

  <!--
  API compatibility validation.

  See ADR 0006-api-compatibility-verification.md for more information about this configuration.
  -->

  <PropertyGroup>
    <EnablePackageValidation>true</EnablePackageValidation>
    <PackageValidationBaselineVersion>6.0.1</PackageValidationBaselineVersion>
    <!--<ApiCompatGenerateSuppressionFile>true</ApiCompatGenerateSuppressionFile>-->

    <!-- TODO: not sure what the errors we get without this are telling us: -->
    <SuppressTfmSupportBuildWarnings>true</SuppressTfmSupportBuildWarnings>
  </PropertyGroup>
    
  <ItemGroup>
    <ApiCompatSuppressionFile Include="ApiCompatSuppressions.xml" />
  </ItemGroup>

  <Target Name="_SetUwpTfmForPackageValidation" BeforeTargets="RunPackageValidation">
    <ItemGroup>
      <PackageValidationReferencePath Condition="%(PackageValidationReferencePath.TargetFrameworkMoniker) == '.NETCore,Version=v5.0'" TargetFrameworkMoniker="UAP,Version=10.0.18362.0" TargetPlatformMoniker="Windows,Version=10.0.18362.0" />
    </ItemGroup>
  </Target>
  
  <PropertyGroup>
    <Description>Legacy facade for Reactive Extensions (Rx) for .NET</Description>
    <PackageReadmeFile>readme.md</PackageReadmeFile>
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\NuGet.Facades.Readme.md" Pack="true" PackagePath="\readme.md" />
  </ItemGroup>

  <ItemGroup>
    <!--
    This facade is much newer than the others. The rest were created
    at the time of the Great Unification (Rx 4.0) to provide backwards
    compatibility with Rx 3.1, so they need to retain the same assembly
    version number hack that Rx 3.1 introduced in an attempt to solve
    the plug-in problem described in https://github.com/dotnet/reactive/issues/97

    System.Reactive became a facade much later (Rx 7.0) in order to
    partially unwind the Great Unification. Since we had long since stopped
    using the assembly version number hack, we don't want to apply
    it here. The Directory.build.props file in the facades folder applies
    this, so we need to remove it.
    -->
    <Compile Remove="..\GlobalAssemblyVersion.cs" Link="GlobalAssemblyVersion.cs" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Re-instate the normal versioning behaviour. -->
    <GenerateAssemblyVersionAttribute>true</GenerateAssemblyVersionAttribute>
    <GenerateAssemblyVersionInfo>true</GenerateAssemblyVersionInfo>
  </PropertyGroup>

  <!--
  The various platform-specific APIs that System.Reactive used to support are now deprecated,
  because we've moved to a more modular approach with separate packages for each platform, and
  this entails some changes to naming conventions. These deprecated types now live in this facade.
  -->
  <ItemGroup>
    <Compile Remove="Obsolete\**\*.*" />
    <Compile Remove="Obsolete\UWP\Linq\**" />
    <EmbeddedResource Remove="Obsolete\**\*.*" />
    <EmbeddedResource Remove="Obsolete\UWP\Linq\**" />
    <!-- Workaround so the files appear in VS -->
    <None Include="Obsolete\**\*.*" />
    <None Include="..\..\src\System.Reactive.For.WindowsRuntime\AsyncInfoExtensions.cs" Link="Obsolete\UWP\AsyncInfoExtensions.cs" />
    <None Remove="Obsolete\UWP\Linq\**" />
    <None Update="Obsolete\UWP\Strings_PlatformServices.Designer.cs">
      <DependentUpon>Obsolete\UWP\Strings_PlatformServices.resx</DependentUpon>
    </None>
    <None Include="..\..\src\System.Reactive.For.Uwp\Stubs.cs" Link="Obsolete\UWP\Stubs.cs" />
    <None Include="..\..\src\System.Reactive.For.Uwp\ThreadPoolTimerExtensions.cs" Link="Obsolete\UWP\Concurrency\ThreadPoolTimerExtensions.cs" />
    <None Update="Linq\QbservableEx.NAry.tt">
      <Generator>TextTemplatingFileGenerator</Generator>
      <LastGenOutput>QbservableEx.NAry.cs</LastGenOutput>
    </None>
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework.StartsWith('uap10.0'))">
    <Compile Include="Obsolete\UWP\**\*.cs" />
    <Compile Include="..\..\src\System.Reactive.For.Uwp\Stubs.cs" Link="Obsolete\UWP\Stubs.cs" />
    <Compile Include="..\..\src\System.Reactive.For.Uwp\ThreadPoolTimerExtensions.cs" Link="Obsolete\UWP\Concurrency\ThreadPoolTimerExtensions.cs" />
  </ItemGroup>


    <!-- WindowsRuntime (netX.0-windows and UWP) -->
  <ItemGroup Condition="$(TargetFramework.StartsWith('uap10.0')) or $(TargetFramework.StartsWith('net8.0-windows')) or $(TargetFramework.StartsWith('net9.0-windows'))">
    <EmbeddedResource Include="Obsolete\UWP\Strings_PlatformServices.resx" />
    <Compile Update="Obsolete\UWP\Strings_PlatformServices.Designer.cs">
      <DependentUpon>Obsolete\UWP\Strings_PlatformServices.resx</DependentUpon>
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
    </Compile>
    <Compile Include="..\..\src\System.Reactive.For.WindowsRuntime\AsyncInfoExtensions.cs" Link="Obsolete\UWP\AsyncInfoExtensions.cs" />

    <ProjectReference Include="..\..\src\System.Reactive.For.WindowsRuntime\System.Reactive.For.WindowsRuntime.csproj" />
  </ItemGroup>

  <!-- Windows Forms and WPF -->
  <ItemGroup Condition="('$(TargetFramework)' == 'net472') or $(TargetFramework.StartsWith('net8.0-windows')) or $(TargetFramework.StartsWith('net9.0-windows'))">
    <ProjectReference Include="..\..\src\System.Reactive.For.WindowsForms\System.Reactive.For.WindowsForms.csproj" />
    <ProjectReference Include="..\..\src\System.Reactive.For.Wpf\System.Reactive.For.Wpf.csproj" />
  </ItemGroup>
  
  <!-- Windows includes for Desktop and UWP -->
  <ItemGroup Condition=" '$(TargetFramework)' == 'net472' or $(TargetFramework.StartsWith('uap10.0')) or $(TargetFramework.StartsWith('net8.0-windows')) or $(TargetFramework.StartsWith('net9.0-windows'))">
    <Compile Include="Obsolete\Windows\**\*.cs" />
    <EmbeddedResource Include="Obsolete\Windows\**\*.resx" />
  </ItemGroup>

  <!-- .NET FX -->
  <ItemGroup Condition=" '$(TargetFramework)' == 'net472'">
    <Reference Include="System.Windows" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="WindowsBase" />
    
    <Compile Include="Obsolete\Remoting\**\*.cs" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'net472' or $(TargetFramework.StartsWith('net8.0-windows')) or $(TargetFramework.StartsWith('net9.0-windows'))">
    <Compile Include="Obsolete\Desktop\**\*.cs" />
  </ItemGroup>


  <ItemGroup Condition="'$(TargetFramework)'=='uap10.0.18362'">
    <!--
    The .NET SDK doesn't expect TargetFrameworks to include uap10.0.18362, so it doesn't understand
    that this project is capable of using projects that target .NET Standard 2.0, with the result
    that it reports an error when trying to resolve the reference to System.Reactive.Net. So
    when building for UWP, we explicitly set the target framework here.
    -->
    <ProjectReference Include="..\..\src\System.Reactive.Net\System.Reactive.Net.csproj">
      <Aliases>SystemReactiveNet</Aliases>
      <SetTargetFramework>TargetFramework=netstandard2.0</SetTargetFramework>
    </ProjectReference>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'!='uap10.0.18362'">
    <ProjectReference Include="..\..\src\System.Reactive.Net\System.Reactive.Net.csproj">
      <Aliases>SystemReactiveNet</Aliases>
    </ProjectReference>
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)'=='uap10.0.18362'">
    <ReferencePath Include="$(TargetPlatformSdkPath)UnionMetadata\10.0.19041.0\Windows.winmd" />
  </ItemGroup>

</Project>
