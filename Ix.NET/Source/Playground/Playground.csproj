<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net8.0</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\System.Interactive.Async.Providers\System.Interactive.Async.Providers.csproj" />
    <ProjectReference Include="..\System.Interactive.Async\System.Interactive.Async.csproj" />
    <ProjectReference Include="..\System.Interactive.Providers\System.Interactive.Providers.csproj" />
    <ProjectReference Include="..\System.Interactive\System.Interactive.csproj" />
    <ProjectReference Include="..\System.Linq.Async.Queryable\System.Linq.Async.Queryable.csproj" />
    <ProjectReference Include="..\System.Linq.Async\System.Linq.Async.csproj" />
  </ItemGroup>

  <!--
  Since this includes code that uses the legacy System.Linq.Async package, we need prevent the compiler from using the .NET runtime library
  System.Linq.AsyncEnumerable package.
  So although we get this references transitively (or automatically on .NET 10.0+) we need to put them explicitly here to set aliases.
  -->
  <ItemGroup Condition="'$(TargetFramework)' != 'net10.0'">
    <PackageReference Include="System.Linq.AsyncEnumerable" Version="10.0.0-rc.1.25451.107"
                      Aliases="SystemLinqAsyncEnumerable" />
  </ItemGroup>

  <Target Name="_SetAliasOnBuiltInSystemLinqAsyncEnumerable" BeforeTargets="ResolveAssemblyReferences">

    <ItemGroup Condition="'$(TargetFramework)' == 'net10.0'">
      <Reference Condition="'%(Reference.AssemblyName)' == 'System.Linq.AsyncEnumerable'">
        <Aliases>SystemLinqAsyncEnumerable</Aliases>
      </Reference>
    </ItemGroup>
  </Target>
</Project>
